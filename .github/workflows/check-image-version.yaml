name: Check image version

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
    secrets:
      token:
        required: true
      REDHAT_REGISTRY_USERNAME:
        required: true
      REDHAT_REGISTRY_PASSWORD:
        required: true

jobs:
  check-image-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure git
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          
          git fetch origin
          git checkout -B Update-image-version-${{ inputs.branch }} origin/${{ inputs.branch }}

      - name: Log in to image registry's
        run: |
          skopeo login brew.registry.redhat.io -u ${{ secrets.REDHAT_REGISTRY_USERNAME }} -p ${{ secrets.REDHAT_REGISTRY_PASSWORD }}


      - name: Check and update images
        run: |
          IMAGES=("registry.access.redhat.com/ubi9/go-toolset" "registry.access.redhat.com/ubi9/ubi-minimal" "brew.registry.redhat.io/rh-osbs/openshift-golang-builder")
          TAG="latest"
          for image in "${IMAGES[@]}"; do
              if [ $image == "brew.registry.redhat.io/rh-osbs/openshift-golang-builder"]
              then
                  TAG="rhel_9_1.21"
              fi
              echo $TAG
              LATEST_SHA=$(skopeo inspect --raw "docker://$image:$TAG" | jq -r '.manifests[] | select(.platform.architecture == "amd64") .digest')
              CURRENT_SHA=$(grep "$image@sha256:" Dockerfile*  | awk '{print $2}' | awk -F '@' '{print $2; exit}')
              if [ "$CURRENT_SHA" != "" ] && [ "$CURRENT_SHA" != "$LATEST_SHA" ]; then
                  grep -rl "$image@$CURRENT_SHA" . | xargs sed -i "s#$image@$CURRENT_SHA#$image@$LATEST_SHA#g"
                  git add .
                  git commit -m ":robot: Update $image image ref in Dockerfiles from ${CURRENT_SHA:7:11} to ${LATEST_SHA:7:11}"
                  echo "IMAGE_UPDATED=true" >> $GITHUB_ENV
              fi
          done

      - name: Push changes
        if: ${{ env.IMAGE_UPDATED == 'true' }}
        run: |
          git push -f origin Update-image-version-${{ inputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Check for existing pull request
        if: ${{ env.IMAGE_UPDATED == 'true' }}
        run: |
          openPRs="$(gh pr list --state open -H Update-image-version-${{ inputs.branch }} --json number | jq -r '.[].number' | wc -l)"
          echo 'NUM_OPEN_PRS='$openPRs >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.token }}

      - name: Create pull request
        if: ${{ env.NUM_OPEN_PRS == 0 && env.IMAGE_UPDATED == 'true' }}
        run: |
          gh pr create --base ${{ inputs.branch }} --head Update-image-version-${{ inputs.branch }} --title ":robot: [${{ inputs.branch }}] Update image version in Dockerfiles" --body "This is an automated PR, which updates the Dockerfile versions to their latest versions."
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
